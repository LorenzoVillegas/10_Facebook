{"ast":null,"code":"import { Post } from './models/post.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./post/post.component\";\nclass AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'facebook';\n    this.serviceURL = \"https://my-json-server.typicode.com/PaoloCarugati/facebook/db\";\n    this.makeTypedRequest();\n  }\n  makeTypedRequest() {\n    this.oServiceResponse = this.http.get(this.serviceURL);\n    this.oServiceResponse.subscribe(d => {\n      this.data = d;\n    });\n  }\n  submit_add_post(autore, testo) {\n    this.posts.push(new Post(autore.value, testo.value));\n    autore.value = '';\n    testo.value = '';\n  }\n  sorted_posts() {\n    return this.posts.sort((a, b) => b.like - a.like);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"jumbotron\"], [1, \"display-4\"], [1, \"form-group\"], [\"for\", \"autore\"], [\"name\", \"autore\", 1, \"form-control\"], [\"newautore\", \"\"], [\"for\", \"testo\"], [\"name\", \"testo\", 1, \"form-control\"], [\"newtesto\", \"\"], [1, \"btn\", \"btn-primary\"], [3, \"post\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"h3\", 2);\n      i0.ɵɵtext(3, \"Aggiungi post\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Autore:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5, 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Testo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8, 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 10);\n      i0.ɵɵtext(15, \" Submit post \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 0);\n      i0.ɵɵelement(17, \"app-post\", 11);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"post\", ctx.data.posts);\n    }\n  },\n  dependencies: [i2.PostComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["Post","AppComponent","constructor","http","title","serviceURL","makeTypedRequest","oServiceResponse","get","subscribe","d","data","submit_add_post","autore","testo","posts","push","value","sorted_posts","sort","a","b","like","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/workspace/10_Facebook/facebook/src/app/app.component.ts","/workspace/10_Facebook/facebook/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Post } from './models/post.model';\nimport { ServiceResponse } from './models/serviceResponse.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'facebook';\n\n  posts: Post[];\n  data: ServiceResponse;\n  oServiceResponse: Observable<ServiceResponse>;\n  serviceURL: string = \"https://my-json-server.typicode.com/PaoloCarugati/facebook/db\";\n\n  constructor(public http: HttpClient) {\n    this.makeTypedRequest()\n  }\n\n  makeTypedRequest() : void\n  {\n    this.oServiceResponse = this.http.get<ServiceResponse>(this.serviceURL);\n    this.oServiceResponse.subscribe(d => {this.data = d;});\n  } \n\n  submit_add_post(autore: HTMLInputElement, testo: HTMLTextAreaElement) {\n    this.posts.push(new Post(autore.value, testo.value))\n    autore.value = ''\n    testo.value = ''\n  }\n  sorted_posts(): Post[]{\n    return this.posts.sort((a: Post, b: Post) => (b.like - a.like))\n  }\n}\n","<div class=\"container\">\n  <form class=\"jumbotron\">\n      <h3 class=\"display-4\">Aggiungi post</h3>\n      <div class=\"form-group\">\n        <label for=\"autore\">Autore:</label>\n        <input name=\"autore\" #newautore class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"testo\">Testo:</label>\n        <input name=\"testo\" #newtesto class=\"form-control\">\n      </div>\n    <button class=\"btn btn-primary\">\n      Submit post\n    </button>\n  </form>\n</div>\n\n<div class=\"container\">\n  <app-post [post]=\"data.posts\"></app-post>\n</div>"],"mappings":"AACA,SAASA,IAAI,QAAQ,qBAAqB;;;;AAK1C,MAKaC,YAAY;EAQvBC,YAAmBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPvB,KAAAC,KAAK,GAAG,UAAU;IAKlB,KAAAC,UAAU,GAAW,+DAA+D;IAGlF,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgBA,CAAA;IAEd,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAkB,IAAI,CAACH,UAAU,CAAC;IACvE,IAAI,CAACE,gBAAgB,CAACE,SAAS,CAACC,CAAC,IAAG;MAAE,IAAI,CAACC,IAAI,GAAGD,CAAC;IAAC,CAAC,CAAC;EACxD;EAEAE,eAAeA,CAACC,MAAwB,EAAEC,KAA0B;IAClE,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,IAAIhB,IAAI,CAACa,MAAM,CAACI,KAAK,EAAEH,KAAK,CAACG,KAAK,CAAC,CAAC;IACpDJ,MAAM,CAACI,KAAK,GAAG,EAAE;IACjBH,KAAK,CAACG,KAAK,GAAG,EAAE;EAClB;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC,CAACC,CAAO,EAAEC,CAAO,KAAMA,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAK,CAAC;EACjE;;AAzBWrB,YAAY,C;mBAAZA,YAAY,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZzB,YAAY,C;QAAZA,YAAY;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXzBV,EAAA,CAAAY,cAAA,aAAuB;MAEKZ,EAAA,CAAAa,MAAA,oBAAa;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACxCd,EAAA,CAAAY,cAAA,aAAwB;MACFZ,EAAA,CAAAa,MAAA,cAAO;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MACnCd,EAAA,CAAAe,SAAA,kBAAqD;MACvDf,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,aAAwB;MACHZ,EAAA,CAAAa,MAAA,cAAM;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MACjCd,EAAA,CAAAe,SAAA,mBAAmD;MACrDf,EAAA,CAAAc,YAAA,EAAM;MACRd,EAAA,CAAAY,cAAA,kBAAgC;MAC9BZ,EAAA,CAAAa,MAAA,qBACF;MAAAb,EAAA,CAAAc,YAAA,EAAS;MAIbd,EAAA,CAAAY,cAAA,cAAuB;MACrBZ,EAAA,CAAAe,SAAA,oBAAyC;MAC3Cf,EAAA,CAAAc,YAAA,EAAM;;;MADMd,EAAA,CAAAgB,SAAA,IAAmB;MAAnBhB,EAAA,CAAAiB,UAAA,SAAAN,GAAA,CAAAvB,IAAA,CAAAI,KAAA,CAAmB;;;;;;SDPlBd,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}